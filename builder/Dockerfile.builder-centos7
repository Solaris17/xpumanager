FROM centos:7

ARG XPUM_GIT_COMMIT=00000000
ARG L0_SRC_URL=https://github.com/oneapi-src/level-zero/archive/refs/tags/v1.8.1.tar.gz

RUN yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm && \
    yum install -y epel-release && \
    yum update -y && \
    yum install -y centos-release-scl \
        curl \
        doxygen \
        git \
        glibc-static \
        libtool \
        lua-devel \
        make \
        openssl-devel \
        rpm-build && \
    yum install -y devtoolset-9-gcc* \
        rh-python38 \
        rh-python38-python-devel \
        rh-python38-python-pip && \
    yum clean all && \
    rm -rf /var/cache/yum

RUN echo "source /opt/rh/devtoolset-9/enable" >> /etc/bashrc

SHELL ["/bin/bash", "--login", "-c"]

RUN mkdir cmake && \
    cd cmake && \
    curl -s https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.sh --output cmake.sh && \
    chmod +x cmake.sh && \
    ./cmake.sh --skip-license && \
    rm -f cmake.sh

ENV PATH="/cmake/bin:${PATH}".

COPY builder/build_grpc.sh /
RUN git clone --depth 1 -b v1.45.0 https://github.com/grpc/grpc && \
    cd /grpc && \
    cp /build_grpc.sh . && \
    git submodule update --init && \
    cd /grpc/third_party/zlib && \
    git pull https://github.com/madler/zlib v1.2.12 && \
    cd /grpc/third_party/protobuf && \
    git pull https://github.com/protocolbuffers/protobuf.git v3.19.4 && \
    cd /grpc && \
    chmod +x ./build_grpc.sh && \
    ./build_grpc.sh && \
    rm -fr /grpc

ENV PATH="/cmake/bin:/opt/rh/rh-python38/root/usr/bin:/opt/rh/rh-python38/root/usr/local/bin:${PATH}".

COPY builder/requirements.txt /tmp/requirements.txt
RUN python3.8 -m pip --proxy=$http_proxy install -r /tmp/requirements.txt

RUN curl -s --location https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz | tar -xz && \
    cd automake-1.16.5 && \
    ./configure && \
    make install && \
    rm -fr /automake-1.16.5

ENV CC=/opt/rh/devtoolset-9/root/usr/bin/gcc
ENV CXX=/opt/rh/devtoolset-9/root/usr/bin/g++

RUN yum update -y && \
    yum install -y libudev-devel && \
    yum clean all && \
    rm -rf /var/cache/yum

RUN curl -s --location https://github.com/intel/metee/archive/refs/tags/3.1.3.tar.gz | tar -xz && \
    cd /metee-3.1.3 && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /metee-3.1.3

RUN curl -s --location https://github.com/intel/igsc/archive/refs/tags/V0.6.0.tar.gz | tar -xz && \
    cd /igsc-0.6.0 && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /igsc-0.6.0

RUN curl -s --location ${L0_SRC_URL} | tar -xz && \
    cd /level-zero-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release && \
    cmake --build . --config Release --target install && \
    rm -fr /level-zero-*

COPY .cmake/ /xpum_src/.cmake
COPY cli/ /xpum_src/cli
COPY core/ /xpum_src/core
COPY daemon/ /xpum_src/daemon
COPY doc/ /xpum_src/doc
COPY install/ /xpum_src/install
COPY rest/ /xpum_src/rest
COPY third_party/ /xpum_src/third_party
COPY build.sh CMakeLists.txt /xpum_src/

RUN ln -sf $(which python3.8) /usr/bin/python && \
    ln -sf $(which python3.8) /usr/bin/python3 && \
    cd /xpum_src && \
    ./build.sh -DGIT_COMMIT=$XPUM_GIT_COMMIT -DBUILD_DOC=ON && \
    mkdir /artifacts && \
    mv build/*.rpm /artifacts && \
    rm -fr build

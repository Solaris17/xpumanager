ARG BASE_VERSION=7
FROM centos:$BASE_VERSION

ARG L0_SRC_URL=https://github.com/oneapi-src/level-zero/archive/refs/tags/v1.8.5.tar.gz
ARG CMAKE_INSTALLER_URL=https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.sh
ARG AUTOMAKE_URL=https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz
ARG METEE_URL=https://github.com/intel/metee/archive/refs/tags/3.1.3.tar.gz
ARG IGSC_URL=https://github.com/intel/igsc/archive/refs/tags/V0.8.4.tar.gz
ARG ZLIB_VERSION=v1.2.13
ARG GRPC_VERSION=v1.49.1
ARG PROTOBUF_VERSION=v3.19.4
ARG CARES_VERSION=cares-1_19_0

RUN yum install -y epel-release https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm https://repo.ius.io/ius-release-el7.rpm && \
    yum update -y && \
    yum install -y centos-release-scl \
        ccache \
        curl \
        doxygen \
        git \
        glibc-static \
        libtool \
        libudev-devel \
        lua53u-devel \
        make \
        openssl-devel \
        rpm-build \
        which && \
    yum install -y devtoolset-9-gcc* \
        rh-python38 \
        rh-python38-python-devel \
        rh-python38-python-pip && \
    yum clean all && \
    rm -rf /var/cache/yum

RUN echo "source /opt/rh/devtoolset-9/enable" >> /etc/bashrc

SHELL ["/bin/bash", "--login", "-c"]

RUN mkdir cmake && \
    cd cmake && \
    curl -s $CMAKE_INSTALLER_URL --output cmake.sh && \
    chmod +x cmake.sh && \
    ./cmake.sh --skip-license && \
    rm -f cmake.sh

ENV PATH="/cmake/bin:${PATH}".

RUN git clone --recurse-submodules --depth 1 -b $GRPC_VERSION https://github.com/grpc/grpc && \
    cd /grpc/third_party/zlib && \
    git pull https://github.com/madler/zlib $ZLIB_VERSION && \
    cd /grpc/third_party/protobuf && \
    git pull https://github.com/protocolbuffers/protobuf.git $PROTOBUF_VERSION && \
    cd /grpc/third_party/cares/cares/ && \
    git pull https://github.com/c-ares/c-ares.git $CARES_VERSION && \
    cd /grpc && \
    mkdir -p cmake/build && \
    cd cmake/build && \
    cmake -DgRPC_INSTALL=ON \
      -DgRPC_BUILD_TESTS=OFF \
      ../.. && \
    make -j && make install && \
    rm -fr /grpc

ENV PATH="/cmake/bin:/opt/rh/rh-python38/root/usr/bin:/opt/rh/rh-python38/root/usr/local/bin:${PATH}".

COPY builder/requirements.txt /tmp/requirements.txt
RUN python3.8 -m pip --proxy=$http_proxy install -r /tmp/requirements.txt

RUN curl -s --location $AUTOMAKE_URL | tar -xz && \
    cd automake-* && \
    ./configure && \
    make install && \
    rm -fr /automake-*

ENV CC=/opt/rh/devtoolset-9/root/usr/bin/gcc
ENV CXX=/opt/rh/devtoolset-9/root/usr/bin/g++

RUN curl -s --location $METEE_URL | tar -xz && \
    cd /metee-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /metee-*

RUN curl -s --location $IGSC_URL | tar -xz && \
    cd /igsc-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -fr /igsc-*

RUN curl -s --location ${L0_SRC_URL} | tar -xz && \
    cd /level-zero-* && \
    mkdir build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release && \
    cmake --build . --config Release --target install && \
    rm -fr /level-zero-*

RUN echo $(which python3.8) && \
    ln -sf $(which python3.8) /usr/bin/python && \
    ln -sf $(which python3.8) /usr/bin/python3 && \
    ldconfig

ENV ACLOCAL_PATH=/usr/share/aclocal

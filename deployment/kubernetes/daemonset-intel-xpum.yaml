#
# Copyright (C) 2021-2022 Intel Corporation
# SPDX-License-Identifier: MIT
# @file daemonset-intel-xpum.yaml
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: intel-xpumanager
  name: intel-xpumanager
spec:
  selector:
    matchLabels:
      app: intel-xpumanager
  template:
    metadata:
      labels:
        app: intel-xpumanager
    spec:
      # hostNetwork should be set true for getting xelink metrics
      hostNetwork: true
      containers:
      - name: intel-xpumanager
        image: intel-xpumanager
        imagePullPolicy: IfNotPresent
        args:
        - /entry_point.sh
        command:
        - /usr/bin/sh
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: SPDLOG_LEVEL
          value: info
        - name: XPUM_REST_NO_TLS
          value: "1"
        - name: XPUM_EXPORTER_NO_AUTH
          value: "1"
        - name: XPUM_EXPORTER_ONLY
          value: "1"
        - name: XPUM_METRICS
          value: 0-37
        resources:
          limits:
            # maps all GPUs to container
            gpu.intel.com/i915_monitoring: 1
            # map CPU devices to container for PCIe read/write data collection
            # requires registry.gitlab.com/arm-research/smarter/smarter-device-manager:v1.1.2
            # refer to https://gitlab.com/arm-research/smarter/smarter-device-manager for details
            smarter-devices/cpu: 1
            smarter-devices/mem: 1
        ports:
        - containerPort: 29999
          name: metrics
          protocol: TCP
        startupProbe:
          httpGet:
            path: /metrics
            port: metrics
          failureThreshold: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healtz
            port: metrics
          initialDelaySeconds: 60
          periodSeconds: 10
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsUser: 0
          capabilities:
            drop: [ "ALL" ]
            add:  [ "SYS_ADMIN", "SYS_RAWIO" ]
        volumeMounts:
          # for getting pod resources
        - mountPath: /var/lib/kubelet/pod-resources
          name: kubeletpodres
          # for PCIe read/write data collection
        - mountPath: /pcm/sys/firmware/acpi/tables/MCFG:ro
          name: mcfg
          # for PCIe read/write data collection
        - mountPath: /pcm/proc/bus/pci/
          name: pci
          # for PCIe read/write data collection
        - mountPath: /pcm/proc/sys/kernel/nmi_watchdog
          name: nmiwatchdog
      imagePullSecrets:
      - name: docker-config-secret
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /var/lib/kubelet/pod-resources
          type: ""
        name: kubeletpodres
      - hostPath:
          path: /sys/firmware/acpi/tables/MCFG
          type: ""
        name: mcfg
      - hostPath:
          path: /proc/bus/pci/
          type: ""
        name: pci
      - hostPath:
          path: /proc/sys/kernel/nmi_watchdog
          type: ""
        name: nmiwatchdog
